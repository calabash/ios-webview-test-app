trigger:
  tags:
    include:
    - '*'
  branches:
    include:
    - master
pr:
  branches:
    include:
    - master
schedules:
- cron: "0 1 * * Mon-Fri"
  displayName: Nightly build
  branches:
    include:
    - master
  always: true

jobs:
  - job:
    timeoutInMinutes: 120
    strategy:
      matrix:
        Mojave-Xcode-10.2.1:
          IMAGE_POOL: 'macOS-10.14'
          XCODE_VERSION: '10.3'
        Mojave-Xcode-11.0:
          IMAGE_POOL: 'macOS-10.14'
          XCODE_VERSION: '11'
    pool:
      vmImage: $(IMAGE_POOL)

    steps:

    - script: |
        set -e
        sudo xcode-select --switch "/Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer"
        echo "Xcode version: $(xcrun xcodebuild -version)"
        echo "Xcode path: $(xcrun -f xcodebuild)"
        echo "Xcode select path: $(xcode-select --print-path)"
      displayName: "Select Xcode $(XCODE_VERSION)"

    - script: git submodule update --init --recursive
      displayName: "Update submodules"

    - script: gem update --system
      displayName: "Update rubygems version"

    - script: |
        set -e
        ruby -v
        echo -e "install: --no-document --env-shebang\nupdate:  --no-document --env-shebang" > ~/.gemrc
        bundle update
      displayName: "Prepare Ruby Environment"

    - script: |
        set -e
        git clone https://$(CalabashKeychainGitHubAccessToken)@github.com/xamarinhq/calabash-codesign.git
        calabash-codesign/apple/create-keychain.sh
      displayName: "Download and install keychain"

    - script: bundle exec bin/ci/test-cloud.rb
      displayName: Test cloud tests

    - script: bundle exec bin/ci/cucumber.rb --tags ~@pending
      displayName: "exec cucmber"

    - task: PublishTestResults@2
      displayName: 'Publish Test Results'
      inputs:
        testResultsFiles: 'CalWebViewApp/reports/**/*.xml'
        failTaskOnFailedTests: true
      condition: always()